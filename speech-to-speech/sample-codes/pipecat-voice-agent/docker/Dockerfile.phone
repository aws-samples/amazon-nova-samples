FROM python:3.12-slim

# Install system dependencies and clean up in same layer
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        ca-certificates \
        tini \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Create non-root user and group with specific UID/GID for security
RUN groupadd -r -g 1001 pipecat && \
    useradd -r -g pipecat -u 1001 -m -d /home/pipecat pipecat

# Set working directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY requirements.txt .

# Install Python dependencies with security improvements
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --no-compile -r requirements.txt && \
    pip cache purge

# Create config directory
RUN mkdir -p config

# Copy application files - specifically for phone service
COPY server_clean.py ./
COPY bot.py ./
COPY logger_config.py ./
COPY config/deployment_config.py ./config/

# Create directories that might be referenced (even if empty)
RUN mkdir -p assets utils logs && \
    # Create a logs directory with proper permissions
    mkdir -p /app/logs && \
    # Ensure proper permissions for application directories
    chmod 755 /app/assets /app/utils /app/logs

# Change ownership to non-root user
RUN chown -R pipecat:pipecat /app

# Switch to non-root user
USER pipecat

# Add labels for better container management and metadata
LABEL maintainer="pipecat-deployment" \
      version="1.0" \
      description="Pipecat Phone Service for Twilio Integration" \
      org.opencontainers.image.title="Pipecat Phone Service" \
      org.opencontainers.image.description="Containerized Pipecat phone service for Twilio integration" \
      org.opencontainers.image.version="1.0" \
      org.opencontainers.image.vendor="Pipecat Deployment"

# Health check configuration with improved reliability
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:7860/health || exit 1

# Expose port
EXPOSE 7860

# Set environment variables for better container behavior
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    # Add graceful shutdown timeout
    GRACEFUL_TIMEOUT=30 \
    # Optimize Python for container environment
    PYTHONHASHSEED=random \
    # Set default host and port for container
    HOST=0.0.0.0 \
    FAST_API_PORT=7860

# Use tini as init system for proper signal handling and zombie reaping
ENTRYPOINT ["/usr/bin/tini", "--"]

# Use exec form for proper signal handling - specifically run server_clean.py
CMD ["python3", "server_clean.py", "--host", "0.0.0.0", "--port", "7860"]