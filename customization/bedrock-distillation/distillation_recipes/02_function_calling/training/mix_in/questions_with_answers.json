[
  {
    "id":"simple_0",
    "question":[
      [
        {
          "role":"user",
          "content":"Find the area of a triangle with a base of 10 units and height of 5 units."
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_triangle_area",
        "description":"Calculate the area of a triangle given its base and height.",
        "parameters":{
          "type":"dict",
          "properties":{
            "base":{
              "type":"integer",
              "description":"The base of the triangle."
            },
            "height":{
              "type":"integer",
              "description":"The height of the triangle."
            },
            "unit":{
              "type":"string",
              "description":"The unit of measure (defaults to 'units' if not specified)"
            }
          },
          "required":[
            "base",
            "height"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_triangle_area":{
          "base":[
            10
          ],
          "height":[
            5
          ],
          "unit":[
            "units",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_104",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the volume of the sphere with radius 3 units."
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_park_area",
        "description":"Calculate the total area of a park based on the radius of its circular part.",
        "parameters":{
          "type":"dict",
          "properties":{
            "radius":{
              "type":"float",
              "description":"The radius of the circular part of the park."
            },
            "units":{
              "type":"string",
              "description":"The units of the radius."
            },
            "shape":{
              "type":"string",
              "description":"The shape of the park. Default is 'circle'."
            }
          },
          "required":[
            "radius",
            "units"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"simple_368",
    "question":[
      [
        {
          "role":"user",
          "content":"How much time will it take to cook a roast chicken of 1.5 kg?"
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_cooking_time",
        "description":"Calculate the cooking time for a roast chicken.",
        "parameters":{
          "type":"dict",
          "properties":{
            "weight_kg":{
              "type":"float",
              "description":"The weight of the chicken in kilograms."
            },
            "cooking_method":{
              "type":"string",
              "description":"The method of cooking, defaults to 'roast'."
            },
            "temp_celsius":{
              "type":"integer",
              "description":"The cooking temperature in degrees celsius, defaults to 180."
            }
          },
          "required":[
            "weight_kg"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_cooking_time":{
          "weight_kg":[
            1.5
          ],
          "cooking_method":[
            "",
            "roast"
          ],
          "temp_celsius":[
            "",
            180
          ]
        }
      }
    ]
  },
  {
    "id":"simple_296",
    "question":[
      [
        {
          "role":"user",
          "content":"Generate a major C scale progression with tempo 80 BPM and duration 4 beats."
        }
      ]
    ],
    "function":[
      {
        "name":"music_generator.generate_scale_progression",
        "description":"Generate a music scale progression in a specific key with a given tempo and duration.",
        "parameters":{
          "type":"dict",
          "properties":{
            "key":{
              "type":"string",
              "description":"The key in which to generate the scale progression."
            },
            "tempo":{
              "type":"integer",
              "description":"The tempo of the scale progression in BPM."
            },
            "duration":{
              "type":"integer",
              "description":"The duration of each note in beats."
            },
            "scale_type":{
              "type":"string",
              "default":"major",
              "description":"The type of scale to generate. Defaults to 'major'."
            }
          },
          "required":[
            "key",
            "tempo",
            "duration"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "music_generator.generate_scale_progression":{
          "key":[
            "C"
          ],
          "tempo":[
            80
          ],
          "duration":[
            4
          ],
          "scale_type":[
            "major",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"simple_177",
    "question":[
      [
        {
          "role":"user",
          "content":"Find all Patent lawsuit cases of Facebook in 2018."
        }
      ]
    ],
    "function":[
      {
        "name":"get_lawsuit_cases",
        "description":"Retrieve all lawsuit cases related to a specific company during a particular year.",
        "parameters":{
          "type":"dict",
          "properties":{
            "company_name":{
              "type":"string",
              "description":"The name of the company."
            },
            "year":{
              "type":"integer",
              "description":"The specific year to search for lawsuit cases."
            },
            "status":{
              "type":"string",
              "enum":[
                "open",
                "closed",
                "all"
              ],
              "description":"The status of the lawsuit cases to retrieve. If not specified, defaults to 'all'."
            }
          },
          "required":[
            "company_name",
            "year"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "get_lawsuit_cases":{
          "company_name":[
            "Facebook"
          ],
          "year":[
            2018
          ],
          "status":[
            "all",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"multiple_20",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the price to commission a sculpture made of marble with a size of 3 feet?"
        }
      ]
    ],
    "function":[
      {
        "name":"sculptor_info.get",
        "description":"Get information about a specific sculptor.",
        "parameters":{
          "type":"dict",
          "properties":{
            "name":{
              "type":"string",
              "description":"The name of the sculptor."
            }
          },
          "required":[
            "name"
          ]
        }
      },
      {
        "name":"sculpture_price.calculate",
        "description":"Calculate the estimated price to commission a sculpture based on the material and size.",
        "parameters":{
          "type":"dict",
          "properties":{
            "material":{
              "type":"string",
              "description":"The material used for the sculpture."
            },
            "size":{
              "type":"integer",
              "description":"The size of the sculpture in feet."
            },
            "complexity":{
              "type":"string",
              "enum":[
                "low",
                "medium",
                "high"
              ],
              "description":"The complexity level of the sculpture. Default is 'medium'.",
              "default":"medium"
            }
          },
          "required":[
            "material",
            "size"
          ]
        }
      },
      {
        "name":"sculpture_availability.check",
        "description":"Check the availability of a specific sculpture in the inventory.",
        "parameters":{
          "type":"dict",
          "properties":{
            "sculpture_name":{
              "type":"string",
              "description":"The name of the sculpture."
            },
            "material":{
              "type":"string",
              "description":"The material of the sculpture."
            }
          },
          "required":[
            "sculpture_name",
            "material"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "sculpture_price.calculate":{
          "material":[
            "marble"
          ],
          "size":[
            3
          ],
          "complexity":[
            "medium",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_114",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the fastest route from Los Angeles to New York?"
        }
      ]
    ],
    "function":[
      {
        "name":"get_closest_airport",
        "description":"Find the closest airport to a specific location.",
        "parameters":{
          "type":"dict",
          "properties":{
            "location":{
              "type":"string",
              "description":"The city you want to find the nearest airport for."
            },
            "radius":{
              "type":"integer",
              "description":"The radius within which to find airports.",
              "optional":"true",
              "default":1
            },
            "limit":{
              "type":"integer",
              "description":"Limit the number of airports to return. Default: 5",
              "optional":"true"
            }
          },
          "required":[
            "location"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"simple_213",
    "question":[
      [
        {
          "role":"user",
          "content":"Book a direct flight from San Francisco to London for 2022-04-27 afternoon"
        }
      ]
    ],
    "function":[
      {
        "name":"flight.book",
        "description":"Book a direct flight for a specific date and time from departure location to destination location.",
        "parameters":{
          "type":"dict",
          "properties":{
            "departure_location":{
              "type":"string",
              "description":"The location you are departing from."
            },
            "destination_location":{
              "type":"string",
              "description":"The location you are flying to."
            },
            "date":{
              "type":"string",
              "description":"The date of the flight. Accepts standard date format e.g., 2022-04-28."
            },
            "time":{
              "type":"string",
              "description":"Preferred time of flight. Default is 'morning'."
            },
            "direct_flight":{
              "type":"boolean",
              "description":"If set to true, only direct flights will be searched. Default is false."
            }
          },
          "required":[
            "departure_location",
            "destination_location",
            "date"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "flight.book":{
          "departure_location":[
            "San Francisco",
            "SF"
          ],
          "destination_location":[
            "London"
          ],
          "date":[
            "2022-04-27",
            "04\/27\/2022",
            "Apr 27, 2022"
          ],
          "time":[
            "afternoon",
            ""
          ],
          "direct_flight":[
            true
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_89",
    "question":[
      [
        {
          "role":"user",
          "content":"What are my rights as a tenant in the state of Texas?"
        }
      ]
    ],
    "function":[
      {
        "name":"generate_contract",
        "description":"Generate a specific type of legal contract based on provided details.",
        "parameters":{
          "type":"dict",
          "properties":{
            "contract_type":{
              "type":"string",
              "description":"The type of contract to generate."
            },
            "parties":{
              "type":"array",
              "items":{
                "type":"string"
              },
              "description":"The parties involved in the contract."
            },
            "additional_details":{
              "type":"dict",
              "description":"Any additional details or provisions that should be included in the contract.",
              "default":"None"
            }
          },
          "required":[
            "contract_type",
            "parties"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"simple_319",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the ranking of Manchester United in Premier League?"
        }
      ]
    ],
    "function":[
      {
        "name":"sports_ranking",
        "description":"Fetch the ranking of a specific sports team in a specific league",
        "parameters":{
          "type":"dict",
          "properties":{
            "team":{
              "type":"string",
              "description":"The name of the team."
            },
            "league":{
              "type":"string",
              "description":"The name of the league."
            },
            "season":{
              "type":"integer",
              "description":"Optional parameter to specify the season, default is the current season '2023' if not specified."
            }
          },
          "required":[
            "team",
            "league"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "sports_ranking":{
          "team":[
            "Manchester United",
            "Man United",
            "Man U",
            "MUFC"
          ],
          "league":[
            "Premier League"
          ],
          "season":[
            "",
            2023
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_110",
    "question":[
      [
        {
          "role":"user",
          "content":"What's the average temperature for Los Angeles in December?"
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_bmi",
        "description":"Calculates the Body Mass Index given person's weight and height.",
        "parameters":{
          "type":"dict",
          "properties":{
            "weight":{
              "type":"float",
              "description":"The weight of the person in kilograms."
            },
            "height":{
              "type":"float",
              "description":"The height of the person in meters."
            },
            "unit":{
              "type":"string",
              "description":"Unit for calculation, either metric or imperial. Default is metric"
            }
          },
          "required":[
            "weight",
            "height"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"irrelevance_69",
    "question":[
      [
        {
          "role":"user",
          "content":"Retrieve the average house price in california"
        }
      ]
    ],
    "function":[
      {
        "name":"regression_model.predict",
        "description":"Predict the target variable based on input features using a trained regression model.",
        "parameters":{
          "type":"dict",
          "properties":{
            "features":{
              "type":"array",
              "items":{
                "type":"float"
              },
              "description":"Input features to make predictions with."
            },
            "model":{
              "type":"dict",
              "description":"Trained regression model object."
            },
            "scaler":{
              "type":"float",
              "description":"Fitted Scaler object for input features scaling.",
              "default":"1.2"
            }
          },
          "required":[
            "features",
            "model"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"multiple_16",
    "question":[
      [
        {
          "role":"user",
          "content":"What's the required minimum population size (Ne) for maintaining the genetic diversity of a wild tiger population for the next 100 generations with a probability of 0.95?"
        }
      ]
    ],
    "function":[
      {
        "name":"species_distribution_modeling.project_range_shift",
        "description":"Predict the potential future geographic distribution of a species under a specified climate change scenario.",
        "parameters":{
          "type":"dict",
          "properties":{
            "species":{
              "type":"string",
              "description":"The species of animal."
            },
            "climate_scenario":{
              "type":"string",
              "description":"The name of the climate change scenario."
            },
            "future_time":{
              "type":"integer",
              "description":"The future time in years for the prediction.",
              "default":100
            }
          },
          "required":[
            "species",
            "climate_scenario"
          ]
        }
      },
      {
        "name":"population_genetics.calculate_ne",
        "description":"Calculate the effective population size necessary to maintain genetic diversity in a wild animal population for a specified number of generations with a given probability.",
        "parameters":{
          "type":"dict",
          "properties":{
            "species":{
              "type":"string",
              "description":"The species of wild animal."
            },
            "generations":{
              "type":"integer",
              "description":"The number of generations for which to maintain the genetic diversity."
            },
            "probability":{
              "type":"float",
              "description":"The probability of maintaining genetic diversity."
            }
          },
          "required":[
            "species",
            "generations",
            "probability"
          ]
        }
      },
      {
        "name":"ecology.calculate_carrying_capacity",
        "description":"Calculate the maximum population size of the species that the environment can sustain indefinitely.",
        "parameters":{
          "type":"dict",
          "properties":{
            "habitat_area":{
              "type":"float",
              "description":"The area of the habitat in square kilometers."
            },
            "species":{
              "type":"string",
              "description":"The species of animal."
            },
            "productivity":{
              "type":"float",
              "description":"The biological productivity of the habitat in animals per square kilometer per year."
            }
          },
          "required":[
            "habitat_area",
            "species",
            "productivity"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "population_genetics.calculate_ne":{
          "species":[
            "wild tiger",
            "tiger"
          ],
          "generations":[
            100
          ],
          "probability":[
            0.95
          ]
        }
      }
    ]
  },
  {
    "id":"simple_113",
    "question":[
      [
        {
          "role":"user",
          "content":"What's the probability of rolling a six on a six-sided die twice in a row?"
        }
      ]
    ],
    "function":[
      {
        "name":"probability.dice_roll",
        "description":"Calculate the probability of rolling a certain number on a six-sided die a certain number of times in a row.",
        "parameters":{
          "type":"dict",
          "properties":{
            "desired_number":{
              "type":"integer",
              "description":"The number you want to roll."
            },
            "number_of_rolls":{
              "type":"integer",
              "description":"How many times you want to roll that number in a row."
            },
            "die_sides":{
              "type":"integer",
              "description":"The number of sides on the die (optional; default is 6)."
            }
          },
          "required":[
            "desired_number",
            "number_of_rolls"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "probability.dice_roll":{
          "desired_number":[
            6
          ],
          "number_of_rolls":[
            2
          ],
          "die_sides":[
            6,
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_92",
    "question":[
      [
        {
          "role":"user",
          "content":"I need a security guard, where can I find the most popular one in New York?"
        }
      ]
    ],
    "function":[
      {
        "name":"search_lawyer",
        "description":"Find a list of lawyers in a specific area, sorted by the number of cases they have won.",
        "parameters":{
          "type":"dict",
          "properties":{
            "area":{
              "type":"string",
              "description":"The city and state where you need a lawyer."
            },
            "specialization":{
              "type":"string",
              "description":"The field in which the lawyer should be specialized."
            },
            "min_experience":{
              "type":"integer",
              "description":"The minimum years of experience required for the lawyer.",
              "default":0
            }
          },
          "required":[
            "area",
            "specialization"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"simple_84",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the Body Mass Index (BMI) of a person with a weight of 85 kilograms and height of 180 cm."
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_bmi",
        "description":"Calculate the Body Mass Index (BMI) of a person.",
        "parameters":{
          "type":"dict",
          "properties":{
            "weight":{
              "type":"integer",
              "description":"Weight of the person in kilograms."
            },
            "height":{
              "type":"integer",
              "description":"Height of the person in centimeters."
            },
            "unit":{
              "type":"string",
              "description":"Optional parameter to choose between 'imperial' and 'metric' systems. Default is 'metric'."
            }
          },
          "required":[
            "weight",
            "height"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_bmi":{
          "weight":[
            85
          ],
          "height":[
            180
          ],
          "unit":[
            "metric",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"simple_43",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the magnetic field strength 10 meters away from a long wire carrying a current of 20 Amperes."
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_magnetic_field_strength",
        "description":"Calculate the magnetic field strength at a point a certain distance away from a long wire carrying a current.",
        "parameters":{
          "type":"dict",
          "properties":{
            "current":{
              "type":"integer",
              "description":"The current flowing through the wire in Amperes."
            },
            "distance":{
              "type":"integer",
              "description":"The perpendicular distance from the wire to the point where the magnetic field is being calculated."
            },
            "permeability":{
              "type":"float",
              "description":"The permeability of the medium. Default is 12.57e-7 (Vacuum Permeability)."
            }
          },
          "required":[
            "current",
            "distance"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_magnetic_field_strength":{
          "current":[
            20
          ],
          "distance":[
            10
          ],
          "permeability":[
            "",
            0.000001257
          ]
        }
      }
    ]
  },
  {
    "id":"simple_86",
    "question":[
      [
        {
          "role":"user",
          "content":"Find the shortest distance between two cities, New York and Los Angeles, through the train and you can transfer."
        }
      ]
    ],
    "function":[
      {
        "name":"city_distance.find_shortest",
        "description":"Calculates the shortest distance between two cities via available public transportation.",
        "parameters":{
          "type":"dict",
          "properties":{
            "start_city":{
              "type":"string",
              "description":"The city you are starting from. The parameter is in the format of city name."
            },
            "end_city":{
              "type":"string",
              "description":"The city you are heading to.The parameter is in the format of city name."
            },
            "transportation":{
              "type":"string",
              "description":"Preferred mode of public transportation. Default is 'bus'."
            },
            "allow_transfer":{
              "type":"boolean",
              "description":"Allows transfer between different transportation if true. Default is false."
            }
          },
          "required":[
            "start_city",
            "end_city"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "city_distance.find_shortest":{
          "start_city":[
            "New York"
          ],
          "end_city":[
            "Los Angeles"
          ],
          "transportation":[
            "train"
          ],
          "allow_transfer":[
            true
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_222",
    "question":[
      [
        {
          "role":"user",
          "content":"How many calories are in a tomato?"
        }
      ]
    ],
    "function":[
      {
        "name":"grocery_store.item_details",
        "description":"Retrieve detailed information about a specific grocery item.",
        "parameters":{
          "type":"dict",
          "properties":{
            "item_name":{
              "type":"string",
              "description":"The name of the grocery item."
            },
            "store_location":{
              "type":"string",
              "description":"The city or area where the grocery store is located."
            },
            "details_level":{
              "type":"string",
              "enum":[
                "simple",
                "detailed"
              ],
              "description":"Level of details required, 'simple' gives basic details, while 'detailed' provides comprehensive info about the item.",
              "default":"simple"
            }
          },
          "required":[
            "item_name",
            "store_location"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"simple_359",
    "question":[
      [
        {
          "role":"user",
          "content":"Give me a recipe for a vegetarian pasta with cheese for 2 servings."
        }
      ]
    ],
    "function":[
      {
        "name":"recipe_search",
        "description":"Search for a recipe given dietary restriction, ingredients, and number of servings.",
        "parameters":{
          "type":"dict",
          "properties":{
            "dietary_restriction":{
              "type":"string",
              "description":"The dietary restriction, e.g., 'Vegetarian'."
            },
            "ingredients":{
              "type":"array",
              "items":{
                "type":"string"
              },
              "description":"The list of ingredients."
            },
            "servings":{
              "type":"integer",
              "description":"The number of servings the recipe should make"
            }
          },
          "required":[
            "dietary_restriction",
            "ingredients",
            "servings"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "recipe_search":{
          "dietary_restriction":[
            "Vegetarian"
          ],
          "ingredients":[
            [
              "pasta",
              "cheese"
            ]
          ],
          "servings":[
            2
          ]
        }
      }
    ]
  },
  {
    "id":"multiple_130",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the Compound Annual Growth Rate (CAGR) for an initial investment of $2000, final value of $3000 in a period of 4 years."
        }
      ]
    ],
    "function":[
      {
        "name":"chess.rating",
        "description":"Fetches the current chess rating of a given player",
        "parameters":{
          "type":"dict",
          "properties":{
            "player_name":{
              "type":"string",
              "description":"The full name of the chess player."
            },
            "variant":{
              "type":"string",
              "description":"The variant of chess for which rating is requested (e.g., 'classical', 'blitz', 'bullet'). Default is 'classical'."
            }
          },
          "required":[
            "player_name"
          ]
        }
      },
      {
        "name":"solve_quadratic",
        "description":"Find the roots of a quadratic equation. Returns both roots.",
        "parameters":{
          "type":"dict",
          "properties":{
            "a":{
              "type":"integer",
              "description":"Coefficient of x\u00b2."
            },
            "b":{
              "type":"integer",
              "description":"Coefficient of x."
            },
            "c":{
              "type":"integer",
              "description":"Constant term."
            }
          },
          "required":[
            "a",
            "b",
            "c"
          ]
        }
      },
      {
        "name":"calculate_cagr",
        "description":"Calculate the Compound Annual Growth Rate (CAGR) given an initial investment value, a final investment value, and the number of years.",
        "parameters":{
          "type":"dict",
          "properties":{
            "initial_value":{
              "type":"integer",
              "description":"The initial investment value."
            },
            "final_value":{
              "type":"integer",
              "description":"The final investment value."
            },
            "period_in_years":{
              "type":"integer",
              "description":"The period of the investment in years."
            }
          },
          "required":[
            "initial_value",
            "final_value",
            "period_in_years"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_cagr":{
          "initial_value":[
            2000
          ],
          "final_value":[
            3000
          ],
          "period_in_years":[
            4
          ]
        }
      }
    ]
  },
  {
    "id":"multiple_129",
    "question":[
      [
        {
          "role":"user",
          "content":"Find the compound interest for an investment of $10000 with an annual interest rate of 5% compounded monthly for 5 years."
        }
      ]
    ],
    "function":[
      {
        "name":"lawsuits_search",
        "description":"Search for lawsuits against a specific company within a specific time and location.",
        "parameters":{
          "type":"dict",
          "properties":{
            "company_name":{
              "type":"string",
              "description":"The name of the company."
            },
            "location":{
              "type":"string",
              "description":"The location where the lawsuit was filed."
            },
            "year":{
              "type":"integer",
              "description":"The year when the lawsuit was filed."
            },
            "case_type":{
              "type":"string",
              "description":"The type of the case. Options include: 'civil', 'criminal', 'small_claims', etc. If not specified, search for all types. Default is 'all'"
            }
          },
          "required":[
            "company_name",
            "location",
            "year"
          ]
        }
      },
      {
        "name":"compound_interest",
        "description":"Calculate compound interest for a certain time period.",
        "parameters":{
          "type":"dict",
          "properties":{
            "principal":{
              "type":"integer",
              "description":"The initial amount of money that was invested or loaned out."
            },
            "annual_rate":{
              "type":"float",
              "description":"The interest rate for a year as a percentage."
            },
            "compounding_freq":{
              "type":"string",
              "enum":[
                "monthly",
                "quarterly",
                "annually"
              ],
              "description":"The number of times that interest is compounded per unit period."
            },
            "time_in_years":{
              "type":"integer",
              "description":"The time the money is invested for in years."
            }
          },
          "required":[
            "principal",
            "annual_rate",
            "compounding_freq",
            "time_in_years"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "compound_interest":{
          "principal":[
            10000
          ],
          "annual_rate":[
            5.0
          ],
          "compounding_freq":[
            "monthly"
          ],
          "time_in_years":[
            5
          ]
        }
      }
    ]
  },
  {
    "id":"simple_132",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the company's return on equity given its net income of $2,000,000, shareholder's equity of $10,000,000, and dividends paid of $200,000."
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_return_on_equity",
        "description":"Calculate a company's return on equity based on its net income, shareholder's equity, and dividends paid.",
        "parameters":{
          "type":"dict",
          "properties":{
            "net_income":{
              "type":"integer",
              "description":"The company's net income."
            },
            "shareholder_equity":{
              "type":"integer",
              "description":"The company's total shareholder's equity."
            },
            "dividends_paid":{
              "type":"integer",
              "description":"The total dividends paid by the company. Optional. If not given, default to 0."
            }
          },
          "required":[
            "net_income",
            "shareholder_equity"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_return_on_equity":{
          "net_income":[
            2000000
          ],
          "shareholder_equity":[
            10000000
          ],
          "dividends_paid":[
            200000
          ]
        }
      }
    ]
  },
  {
    "id":"multiple_42",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the final temperature when 2 moles of gas at 300 K are mixed with 3 moles of the same gas at 400 K."
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_final_temperature",
        "description":"Calculate the final temperature when different quantities of the same gas at different temperatures are mixed.",
        "parameters":{
          "type":"dict",
          "properties":{
            "quantity1":{
              "type":"integer",
              "description":"The quantity of the first sample of gas."
            },
            "temperature1":{
              "type":"integer",
              "description":"The temperature of the first sample of gas."
            },
            "quantity2":{
              "type":"integer",
              "description":"The quantity of the second sample of gas."
            },
            "temperature2":{
              "type":"integer",
              "description":"The temperature of the second sample of gas."
            }
          },
          "required":[
            "quantity1",
            "temperature1",
            "quantity2",
            "temperature2"
          ]
        }
      },
      {
        "name":"calculate_mass",
        "description":"Calculate the mass of a gas given its quantity and molar mass.",
        "parameters":{
          "type":"dict",
          "properties":{
            "quantity":{
              "type":"integer",
              "description":"The quantity of the gas."
            },
            "molar_mass":{
              "type":"integer",
              "description":"The molar mass of the gas."
            }
          },
          "required":[
            "quantity",
            "molar_mass"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_final_temperature":{
          "quantity1":[
            2
          ],
          "temperature1":[
            300
          ],
          "quantity2":[
            3
          ],
          "temperature2":[
            400
          ]
        }
      }
    ]
  },
  {
    "id":"multiple_107",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the density of a substance with a mass of 45 kg and a volume of 15 m\u00b3?"
        }
      ]
    ],
    "function":[
      {
        "name":"mix_paint_color",
        "description":"Combine two primary paint colors and adjust the resulting color's lightness level.",
        "parameters":{
          "type":"dict",
          "properties":{
            "color1":{
              "type":"string",
              "description":"The first primary color to be mixed."
            },
            "color2":{
              "type":"string",
              "description":"The second primary color to be mixed."
            },
            "lightness":{
              "type":"integer",
              "description":"The desired lightness level of the resulting color in percentage. The default level is set to 50%."
            }
          },
          "required":[
            "color1",
            "color2"
          ]
        }
      },
      {
        "name":"calculate_density",
        "description":"Calculate the density of a substance based on its mass and volume.",
        "parameters":{
          "type":"dict",
          "properties":{
            "mass":{
              "type":"integer",
              "description":"The mass of the substance in kilograms."
            },
            "volume":{
              "type":"integer",
              "description":"The volume of the substance in cubic meters."
            },
            "unit":{
              "type":"string",
              "description":"The unit of density. Default is kg\/m\u00b3"
            }
          },
          "required":[
            "mass",
            "volume"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "calculate_density":{
          "mass":[
            45
          ],
          "volume":[
            15
          ],
          "unit":[
            "kg\/m\u00b3",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_64",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the probability of getting a face card in a standard deck?"
        }
      ]
    ],
    "function":[
      {
        "name":"probability.coin_toss_heads",
        "description":"Calculate the probability of getting a specific number of heads after tossing a coin multiple times.",
        "parameters":{
          "type":"dict",
          "properties":{
            "coin_tosses":{
              "type":"integer",
              "description":"The number of times the coin is tossed."
            },
            "heads_needed":{
              "type":"integer",
              "description":"The specific number of heads you want to get after coin tosses."
            },
            "coin_type":{
              "type":"string",
              "default":"fair",
              "description":"The type of the coin. Default is 'fair'. Possible values are 'fair', 'double_heads', 'double_tails'.",
              "enum":[
                "fair",
                "double_heads",
                "double_tails"
              ]
            }
          },
          "required":[
            "coin_tosses",
            "heads_needed"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"irrelevance_71",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the profit margin of a company with revenue of $200,000 and expenses of $150,000."
        }
      ]
    ],
    "function":[
      {
        "name":"calculate_ROI",
        "description":"Calculate the Return on Investment (ROI) for a given investment amount and net profit.",
        "parameters":{
          "type":"dict",
          "properties":{
            "investment_amount":{
              "type":"float",
              "description":"The initial amount of money invested."
            },
            "net_profit":{
              "type":"float",
              "description":"The profit made from the investment."
            },
            "duration_years":{
              "type":"integer",
              "description":"The duration of the investment in years.",
              "default":1
            }
          },
          "required":[
            "investment_amount",
            "net_profit"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"live_relevance_2-2-0",
    "question":[
      [
        {
          "role":"user",
          "content":"Can you find the top 5 search results for the capital of the United States in French?"
        }
      ]
    ],
    "function":[
      {
        "name":"search_web",
        "description":"Performs a search on the web and retrieves a list of results based on the given query string.",
        "parameters":{
          "type":"dict",
          "required":[
            "query"
          ],
          "properties":{
            "query":{
              "type":"string",
              "description":"The search term or phrase to look for using a search engine."
            },
            "results_limit":{
              "type":"integer",
              "description":"The maximum number of search results to retrieve.",
              "default":10
            },
            "language":{
              "type":"string",
              "description":"The language preference for the search results.",
              "enum":[
                "en",
                "es",
                "fr",
                "de",
                "zh"
              ],
              "default":"en"
            },
            "safe_search":{
              "type":"boolean",
              "description":"Whether to filter out explicit content in search results.",
              "default":true
            }
          }
        }
      }
    ],
    "ground_truth":[
      {
        "search_web":{
          "query":[
            "test parameter value"
          ],
          "results_limit":[
            10
          ],
          "language":[
            "en"
          ],
          "safe_search":[
            true
          ]
        }
      }
    ]
  },
  {
    "id":"simple_69",
    "question":[
      [
        {
          "role":"user",
          "content":"Find out the population and species of turtles in Mississippi river in 2020."
        }
      ]
    ],
    "function":[
      {
        "name":"ecology.get_turtle_population",
        "description":"Get the population and species of turtles in a specific location.",
        "parameters":{
          "type":"dict",
          "properties":{
            "location":{
              "type":"string",
              "description":"The name of the location."
            },
            "year":{
              "type":"integer",
              "description":"The year of the data requested. Default is 2001."
            },
            "species":{
              "type":"boolean",
              "description":"Whether to include species information. Default is false."
            }
          },
          "required":[
            "location"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "ecology.get_turtle_population":{
          "location":[
            "Mississippi river"
          ],
          "year":[
            2020
          ],
          "species":[
            true
          ]
        }
      }
    ]
  },
  {
    "id":"simple_382",
    "question":[
      [
        {
          "role":"user",
          "content":"Book a single room for two nights at the Hilton Hotel in Chicago, starting from 10th December 2022."
        }
      ]
    ],
    "function":[
      {
        "name":"book_hotel",
        "description":"Book a room of specified type for a particular number of nights at a specific hotel, starting from a specified date.",
        "parameters":{
          "type":"dict",
          "properties":{
            "hotel_name":{
              "type":"string",
              "description":"The name of the hotel."
            },
            "location":{
              "type":"string",
              "description":"The city in which the hotel is located."
            },
            "room_type":{
              "type":"string",
              "description":"The type of room to be booked."
            },
            "start_date":{
              "type":"string",
              "description":"The start date for the booking."
            },
            "nights":{
              "type":"integer",
              "description":"The number of nights for which the booking is to be made."
            }
          },
          "required":[
            "hotel_name",
            "location",
            "room_type",
            "start_date",
            "nights"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "book_hotel":{
          "hotel_name":[
            "Hilton Hotel",
            "Hilton"
          ],
          "location":[
            "Chicago"
          ],
          "room_type":[
            "single"
          ],
          "start_date":[
            "2022-12-10",
            "10\/12\/2022",
            "Dec 10, 2022",
            "December 10, 2022"
          ],
          "nights":[
            2
          ]
        }
      }
    ]
  },
  {
    "id":"simple_377",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the current time in Sydney, Australia?"
        }
      ]
    ],
    "function":[
      {
        "name":"get_current_time",
        "description":"Retrieve the current time for a specified city and country.",
        "parameters":{
          "type":"dict",
          "properties":{
            "city":{
              "type":"string",
              "description":"The city for which the current time is to be retrieved."
            },
            "country":{
              "type":"string",
              "description":"The country where the city is located."
            },
            "format":{
              "type":"string",
              "description":"The format in which the time is to be displayed, optional (defaults to 'HH:MM:SS')."
            }
          },
          "required":[
            "city",
            "country"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "get_current_time":{
          "city":[
            "Sydney"
          ],
          "country":[
            "Australia"
          ],
          "format":[
            "",
            "HH:MM:SS"
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_95",
    "question":[
      [
        {
          "role":"user",
          "content":"Who is the laywer for the Doe vs. Smith law case?"
        }
      ]
    ],
    "function":[
      {
        "name":"case_review.retrieve_case_outcome",
        "description":"Retrieve the outcome of a specific law case.",
        "parameters":{
          "type":"dict",
          "properties":{
            "case_name":{
              "type":"string",
              "description":"The full case name (including vs.)."
            },
            "case_year":{
              "type":"integer",
              "description":"The year the case was tried."
            },
            "location":{
              "type":"string",
              "description":"The location (City, State) of where the case was tried.",
              "optional":"true",
              "default":"CA"
            }
          },
          "required":[
            "case_name",
            "case_year"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"irrelevance_137",
    "question":[
      [
        {
          "role":"user",
          "content":"Who signed the declaration of independence?"
        }
      ]
    ],
    "function":[
      {
        "name":"historical_event.get_date",
        "description":"Retrieve the date of a specific historical event.",
        "parameters":{
          "type":"dict",
          "properties":{
            "event_name":{
              "type":"string",
              "description":"The name of the historical event."
            },
            "event_location":{
              "type":"string",
              "description":"The location of the historical event."
            },
            "event_time_period":{
              "type":"string",
              "description":"The historical time period during which the event took place. (e.g., Renaissance, Middle Ages, etc.)",
              "default":"Renaissance"
            }
          },
          "required":[
            "event_name",
            "event_location"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"irrelevance_108",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the best way to reduce CO2 emissions?"
        }
      ]
    ],
    "function":[
      {
        "name":"emission_estimator",
        "description":"Estimate the potential CO2 emissions reduction based on various factors.",
        "parameters":{
          "type":"dict",
          "properties":{
            "current_emissions":{
              "type":"float",
              "description":"Current amount of CO2 emissions in tons."
            },
            "action":{
              "type":"string",
              "description":"The action proposed to reduce emissions, e.g., 'plant trees', 'solar power installation', 'switch to electric cars'."
            },
            "scale":{
              "type":"string",
              "description":"The scale at which the action will be taken.",
              "default":"individual"
            },
            "duration":{
              "type":"integer",
              "description":"The duration over which the action will be sustained, in years."
            }
          },
          "required":[
            "current_emissions",
            "action",
            "duration"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"irrelevance_161",
    "question":[
      [
        {
          "role":"user",
          "content":"What is the most visited market in New York?"
        }
      ]
    ],
    "function":[
      {
        "name":"museum_data.get_visit_stats",
        "description":"Retrieve visitation statistics for museums.",
        "parameters":{
          "type":"dict",
          "properties":{
            "city":{
              "type":"string",
              "description":"The city where the museum is located."
            },
            "year":{
              "type":"integer",
              "description":"The year for which data is to be fetched."
            },
            "month":{
              "type":"integer",
              "description":"The month for which data is to be fetched (Optional).",
              "default":12
            }
          },
          "required":[
            "city",
            "year"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"multiple_95",
    "question":[
      [
        {
          "role":"user",
          "content":"Convert 200 euros to US dollars using current exchange rate."
        }
      ]
    ],
    "function":[
      {
        "name":"currency_exchange.convert",
        "description":"Converts a value from one currency to another using the latest exchange rate.",
        "parameters":{
          "type":"dict",
          "properties":{
            "amount":{
              "type":"integer",
              "description":"The amount of money to be converted."
            },
            "from_currency":{
              "type":"string",
              "description":"The currency to convert from."
            },
            "to_currency":{
              "type":"string",
              "description":"The currency to convert to."
            },
            "live_conversion":{
              "type":"boolean",
              "description":"If true, use the latest exchange rate for conversion, else use the last known rate. Default false"
            }
          },
          "required":[
            "amount",
            "from_currency",
            "to_currency"
          ]
        }
      },
      {
        "name":"unit_conversion.convert",
        "description":"Converts a value from one unit to another.",
        "parameters":{
          "type":"dict",
          "properties":{
            "value":{
              "type":"integer",
              "description":"The value to be converted."
            },
            "from_unit":{
              "type":"string",
              "description":"The unit to convert from."
            },
            "to_unit":{
              "type":"string",
              "description":"The unit to convert to."
            }
          },
          "required":[
            "value",
            "from_unit",
            "to_unit"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "currency_exchange.convert":{
          "amount":[
            200
          ],
          "from_currency":[
            "EUR"
          ],
          "to_currency":[
            "USD"
          ],
          "live_conversion":[
            true
          ]
        }
      }
    ]
  },
  {
    "id":"simple_165",
    "question":[
      [
        {
          "role":"user",
          "content":"Retrieve cases from 2020 about theft crimes in Los Angeles, California"
        }
      ]
    ],
    "function":[
      {
        "name":"civil_cases.retrieve",
        "description":"Retrieve civil cases based on given parameters, including year, crime type, and location.",
        "parameters":{
          "type":"dict",
          "properties":{
            "year":{
              "type":"integer",
              "description":"Year of the cases"
            },
            "crime_type":{
              "type":"string",
              "description":"Type of the crime."
            },
            "location":{
              "type":"string",
              "description":"Location of the case in the format of city name."
            }
          },
          "required":[
            "year",
            "crime_type",
            "location"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "civil_cases.retrieve":{
          "year":[
            2020
          ],
          "crime_type":[
            "theft"
          ],
          "location":[
            "Los Angeles",
            "Los Angeles, California"
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_151",
    "question":[
      [
        {
          "role":"user",
          "content":"Find the year of a Picasso's painting."
        }
      ]
    ],
    "function":[
      {
        "name":"sculpture.get_dimensions",
        "description":"Retrieve the dimensions of a specific sculpture.",
        "parameters":{
          "type":"dict",
          "properties":{
            "sculpture_name":{
              "type":"string",
              "description":"The name of the sculpture."
            },
            "material":{
              "type":"string",
              "description":"The material of the sculpture.",
              "default":"wood"
            },
            "artist_name":{
              "type":"string",
              "description":"The name of the artist who created the sculpture."
            }
          },
          "required":[
            "sculpture_name",
            "artist_name"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  },
  {
    "id":"multiple_182",
    "question":[
      [
        {
          "role":"user",
          "content":"Find me a multiplayer game with rating above 4.5 and compatible with Windows 10."
        }
      ]
    ],
    "function":[
      {
        "name":"geo_distance.calculate",
        "description":"Calculate the geographic distance between two given locations.",
        "parameters":{
          "type":"dict",
          "properties":{
            "start_location":{
              "type":"string",
              "description":"The starting location for the distance calculation."
            },
            "end_location":{
              "type":"string",
              "description":"The destination location for the distance calculation."
            },
            "units":{
              "type":"string",
              "description":"Optional. The desired units for the resulting distance ('miles' or 'kilometers'). Defaults to 'miles'."
            }
          },
          "required":[
            "start_location",
            "end_location"
          ]
        }
      },
      {
        "name":"multiplayer_game_finder",
        "description":"Locate multiplayer games that match specific criteria such as rating, platform compatibility, genre, etc.",
        "parameters":{
          "type":"dict",
          "properties":{
            "platform":{
              "type":"string",
              "description":"The platform you want the game to be compatible with, e.g. Windows 10, PS5."
            },
            "rating":{
              "type":"float",
              "description":"Desired minimum game rating on a 5.0 scale."
            },
            "genre":{
              "type":"string",
              "description":"Desired game genre, e.g. Action, Adventure, Racing. Default is ''.",
              "enum":[
                "Action",
                "Adventure",
                "Racing",
                "Strategy",
                "Simulation"
              ]
            }
          },
          "required":[
            "platform",
            "rating"
          ]
        }
      },
      {
        "name":"send_email",
        "description":"Send an email to the specified email address.",
        "parameters":{
          "type":"dict",
          "properties":{
            "to":{
              "type":"string",
              "description":"The email address to send to."
            },
            "subject":{
              "type":"string",
              "description":"The subject of the email."
            },
            "body":{
              "type":"string",
              "description":"The body content of the email."
            },
            "cc":{
              "type":"string",
              "description":"The email address to carbon copy. Default is ''."
            },
            "bcc":{
              "type":"string",
              "description":"The email address to blind carbon copy. Default is ''."
            }
          },
          "required":[
            "to",
            "subject",
            "body"
          ]
        }
      },
      {
        "name":"calculate_area_under_curve",
        "description":"Calculate the area under a mathematical function within a given interval.",
        "parameters":{
          "type":"dict",
          "properties":{
            "function":{
              "type":"string",
              "description":"The mathematical function as a string."
            },
            "interval":{
              "type":"array",
              "items":{
                "type":"float"
              },
              "description":"An array that defines the interval to calculate the area under the curve from the start to the end point."
            },
            "method":{
              "type":"string",
              "description":"The numerical method to approximate the area under the curve. The default value is 'trapezoidal'."
            }
          },
          "required":[
            "function",
            "interval"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "multiplayer_game_finder":{
          "platform":[
            "Windows 10"
          ],
          "rating":[
            4.5
          ],
          "genre":[
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"simple_395",
    "question":[
      [
        {
          "role":"user",
          "content":"Find the nearest parking lot within 2 miles of Central Park in New York."
        }
      ]
    ],
    "function":[
      {
        "name":"parking_lot.find_nearest",
        "description":"Locate the nearest parking lot based on a specific location and radius.",
        "parameters":{
          "type":"dict",
          "properties":{
            "location":{
              "type":"string",
              "description":"The reference location e.g. Central Park, NY"
            },
            "radius":{
              "type":"integer",
              "description":"The maximum distance from the location in miles. Default is 5 miles"
            },
            "type":{
              "type":"string",
              "description":"The type of parking lot. Default is 'public'."
            }
          },
          "required":[
            "location",
            "radius"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "parking_lot.find_nearest":{
          "location":[
            "Central Park, NY"
          ],
          "radius":[
            2
          ],
          "type":[
            "public",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"simple_334",
    "question":[
      [
        {
          "role":"user",
          "content":"Check who is the winner in a game of blackjack given player having A and 10, dealer having 10 and 9. The Ace is considered 1."
        }
      ]
    ],
    "function":[
      {
        "name":"blackjack.check_winner",
        "description":"Checks and determines the winner in a game of blackjack.",
        "parameters":{
          "type":"dict",
          "properties":{
            "player_cards":{
              "type":"array",
              "items":{
                "type":"string"
              },
              "description":"Cards held by the player."
            },
            "dealer_cards":{
              "type":"array",
              "items":{
                "type":"string"
              },
              "description":"Cards held by the dealer."
            },
            "ace_value":{
              "type":"integer",
              "description":"The value considered for the ace card, can be either 1 or 11.",
              "default":11
            }
          },
          "required":[
            "player_cards",
            "dealer_cards"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "blackjack.check_winner":{
          "player_cards":[
            [
              "A",
              "10"
            ]
          ],
          "dealer_cards":[
            [
              "10",
              "9"
            ]
          ],
          "ace_value":[
            1
          ]
        }
      }
    ]
  },
  {
    "id":"simple_254",
    "question":[
      [
        {
          "role":"user",
          "content":"Retrieve the historic dates and facts related to Christianity between year 300 and 400."
        }
      ]
    ],
    "function":[
      {
        "name":"get_religion_history",
        "description":"Retrieves historic events and facts related to a specified religion for a given period.",
        "parameters":{
          "type":"dict",
          "properties":{
            "religion":{
              "type":"string",
              "description":"The name of the religion."
            },
            "start_year":{
              "type":"integer",
              "description":"The starting year of the period."
            },
            "end_year":{
              "type":"integer",
              "description":"The end year of the period."
            },
            "event_type":{
              "type":"string",
              "enum":[
                "all",
                "crusade",
                "schism",
                "reform"
              ],
              "description":"Optional parameter specifying the type of event. Default is 'all'."
            }
          },
          "required":[
            "religion",
            "start_year",
            "end_year"
          ]
        }
      }
    ],
    "ground_truth":[
      {
        "get_religion_history":{
          "religion":[
            "Christianity"
          ],
          "start_year":[
            300
          ],
          "end_year":[
            400
          ],
          "event_type":[
            "all",
            ""
          ]
        }
      }
    ]
  },
  {
    "id":"irrelevance_68",
    "question":[
      [
        {
          "role":"user",
          "content":"Calculate the standard deviation of the null hypothesis test with a sample mean of 98.2, standard deviation of 1.4, and sample size of 40 for a population mean of 98.6."
        }
      ]
    ],
    "function":[
      {
        "name":"statistics.calculate_p_value",
        "description":"Calculate the p-value for a t-test on a single sample from a population.",
        "parameters":{
          "type":"dict",
          "properties":{
            "sample_mean":{
              "type":"float",
              "description":"The mean of the sample data."
            },
            "population_mean":{
              "type":"float",
              "description":"The mean of the population data."
            },
            "sample_std_dev":{
              "type":"float",
              "description":"The standard deviation of the sample data."
            },
            "sample_size":{
              "type":"integer",
              "description":"The size of the sample data."
            },
            "two_tailed":{
              "type":"boolean",
              "description":"Whether the test is two-tailed. If not provided, default is true."
            }
          },
          "required":[
            "sample_mean",
            "population_mean",
            "sample_std_dev",
            "sample_size"
          ]
        }
      }
    ],
    "ground_truth":[

    ]
  }
]